swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase, including the proposed routes for phare 2
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
#Proposition for phase 2: 
  /user/accounts/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Last month transactions
      description: API for Transactions
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions received successfully
          schema:
            $ref: '#/definitions/AllTransactionsResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Request Lacks Valid Authentication
        '404':
          description: Requested Resource Not Found
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Transactions Information API
      description: API for fetching the informations of a specific transaction
      parameters:
        - in: path
          type: string
          name: accountId
          description: ID unique of the account
          required: true
        - in: path
          type: string
          name: transactionId
          description: ID unique of the atransaction
          required: true
          
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction informations received Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Request Lacks Valid Authentication
        '404':
          description: Requested Resource Not Found
        '500':
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction Informations API
      description: API for updating the informations of a transaction.
      parameters:
        - in: path
          type: string
          name: accountId
          description: ID unique of the account
          required: true
        - in: path
          type: string
          name: transactionId
          description: ID unique of the transaction
          required: true
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user transaction informations
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction informations updated
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Request Lacks Valid Authentication
        '404':
          description: Requested Resource Not Found
        '500':
          description: Internal Server Error
  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AllTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items: 
          type: object
          properties:
            id: 
              type: integer
            transactions:
              type: array
              items: 
                type: object
                properties:
                  id:
                    type: string
                  date:
                    type: string
                  description:
                    type: string
                  amount:
                    type: integer
                  balance:
                    type: integer  
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactionType:
            type: string
          category:
            type: string
          notes:
            type: string
          id:
            type: string
          date:
            type: string
          description:
            type: string
          amount:
            type: integer
          balance:
            type: integer
  Transaction:
    type: object
    properties:
      category:
        type: string
        #nullable: true
      notes:
        type: string
        #nullable: true